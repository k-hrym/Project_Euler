# Problem 19 「日曜日の数え上げ」 †
# 次の情報が与えられている.

# 1900年1月1日は月曜日である.
# 9月, 4月, 6月, 11月は30日まであり, 2月を除く他の月は31日まである.
# 2月は28日まであるが, うるう年のときは29日である.
# うるう年は西暦が4で割り切れる年に起こる.
# しかし, 西暦が400で割り切れず100で割り切れる年はうるう年でない.
# 20世紀（1901年1月1日から2000年12月31日）中に月の初めが日曜日になるのは何回あるか?

year = 1900
day_sum = 0
sunday_count = 0

# 2000年12月まで各月の日数を足していく
while year < 2001
  1.upto(12) do |month|
    if [4,6,9,11].include?(month)
      day_sum += 30
    elsif month == 2
      # うるう年関係を考慮
      if year % 400 != 0 && year % 100 == 0
        day_sum += 28
      elsif year % 4 == 0
        day_sum += 29
      else
        day_sum += 28
      end
    else
      day_sum += 31
    end

    # 月曜日である1900年1月1日を1としてスタートすると、日曜日は必ず7で割り切れる数になる。
    # 月初が日曜日、とはつまり前月末までの日数計に1を足すと7で割り切れる数になるということ。
    if (day_sum+1) % 7 == 0 && day_sum >= 365
      sunday_count += 1
    end

  end
  year += 1
end

p sunday_count